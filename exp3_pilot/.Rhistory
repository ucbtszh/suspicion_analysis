lmer_std_ests(fit3)
mean(data$age)
sd(data$age)
table(data$gender)
summary(fit2)
summary(fit3)
lmer_std_ests(fit3)
lmer_std_ests(fit2)
summary(fit2)
lmer_std_ests(fit2)
sum(data_long[data_long$reward_block == 'high', ]$subject_lied)
sum(data_long[data_long$reward_block == 'high']$subject_lied)
typeof(data_long[data_long$reward_block == 'high']$subject_lied)
data_long[data_long$reward_block == 'high']$subject_lied
data_long[data_long$reward_block == 'high', ]$subject_lied
data_long[reward_block == 'high', ]$subject_lied
data_long[reward_block == 'high', ]
data_long[data_long$reward_block == 'high', ]
data_long[data_long$reward_block, ]
sum(data_long[data_long$reward_block, ])
sum(data_long[data_long$reward_block, ]$subject_lied)
sum(data_long[data_long$reward_block, 'subject_lied'])
tmp1 <- data_long[data_long$reward_block, ]
dim(tmp1)
tmp2 <- data_long[!data_long$reward_block, ]
dim(tmp2)
tmp2 <- data_long[data_long$reward_block == FALSE, ]
dim(tmp2)
tmp1 == tmp2
head(tmp2)
head(tmp1)
tmp1 <- data_long[data_long$reward_block == TRUE, ]
head(tmp1)
data_long
data_long["55e876f25e4d360012cc283d "]
data_long["55e876f25e4d360012cc283d"]
tmp1 <- data_long[data_long$reward_block == TRUE, ]
tmp2 <- data_long[data_long$reward_block == FALSE, ]
head(tmp1)
tail(tmp1)
tail(tmp2)
head(tmp2)
sum(tmp1$subject_lied)
sum(tmp2$subject_lied)
sum(tmp1$subject_lied) / sum(tmp2$subject_lied)
colnames(data)
data$lie_proportion_block_high_reward / data$lie_proportion_block_low_reward
mean(data$lie_proportion_block_high_reward / data$lie_proportion_block_low_reward)
drop.na(data$lie_proportion_block_high_reward / data$lie_proportion_block_low_reward)
na.omit(data$lie_proportion_block_high_reward / data$lie_proportion_block_low_reward)
tmp <- na.omit(data$lie_proportion_block_high_reward / data$lie_proportion_block_low_reward)
tmp
tmp[tmp]
tmp
mean(tmp)
data$prop_lieprop <- data$lie_proportion_block_high_reward / data$lie_proportion_block_low_reward
data$prop_lieprop
na.omit(data$prop_lieprop)
mean(na.omit(data$prop_lieprop))
?na.omit
na.omit(data$prop_lieprop)
data[is.finite(rowSums(data$prop_lieprop)),]
data[is.finite(rowSums(data)),]
data[!is.infinite(rowSums(data)),]
data
data[is.finite(data$prop_lieprop), ]
data[is.finite(data$prop_lieprop), ]$prop_lieprop
data[49, ]
data
View(data)
data[is.finite(data$prop_lieprop), ]$prop_lieprop
mean(data[is.finite(data$prop_lieprop), ]$prop_lieprop)
sd(data[is.finite(data$prop_lieprop), ]$prop_lieprop)
ifelse(is.finite(data$prop_lieprop), data$prop_lieprop, 0)
data$lie_proportion_block_high_reward / data$lie_proportion_block_low_reward
View(data)
(data$lie_proportion_block_high_reward+1) / (data$lie_proportion_block_low_reward+1)
mean((data$lie_proportion_block_high_reward+1) / (data$lie_proportion_block_low_reward+1))
tmp <- (data$lie_proportion_block_high_reward+1) / (data$lie_proportion_block_low_reward+1)
tmp
tmp -1
tmp <- tmp - 1
mean(tmp)
mean(data$lie_proportion_block_high_reward)
mean(data$lie_proportion_block_low_reward)
tmp2 <- ifelse(data$lie_proportion_block_high_reward > data$lie_proportion_block_low_reward, data$prop_lieprop, data$prop_lieprop, 0)
tmp2
tmp2 <- ifelse(data$lie_proportion_block_high_reward > data$lie_proportion_block_low_reward, data$prop_lieprop, 0)
tmp2
tmp2 <- ifelse(data$lie_proportion_block_high_reward > data$lie_proportion_block_low_reward, data$lie_proportion_block_high_reward / data$lie_proportion_block_low_reward, 0)
tmp2
tmp2 <- ifelse(data$lie_proportion_block_high_reward > data$lie_proportion_block_low_reward, data$lie_proportion_block_high_reward / data$lie_proportion_block_low_reward, NA)
tmp2
tmp2 <- ifelse(data$lie_proportion_block_high_reward > data$lie_proportion_block_low_reward, (data$lie_proportion_block_high_reward+1) / (data$lie_proportion_block_low_reward+1), NA)
tmp2
mean(tmp2)
mean(na.omit(tmp2))
never_lied <- 0
for(id in uuids) {
print(id)
if(sum(data_long[id]$subject_lied) == 0) {
never_lied <- never_lied + 1
} else {
print("participant lied at least once")
}
}
never_lied
never_lost <- 0
for(id in uuids) {
print(id)
if(sum(data_long[id]$subject_lost) == 0) {
never_lost <- never_lost + 1
} else {
print("participant lost at least once")
}
}
never_lost
mean(data$dprime_block_high_reward)
mean(data$dprime_block_low_reward)
mean(data_succ$dprime_block_high_reward)
mean(data_succ$dprime_block_low_reward)
mean(data$tp_block_high_reward)
mean(data$tp_block_low_reward)
mean(data_succ$tp_block_high_reward)
mean(data_succ$tp_block_low_reward)
mean(data_succ$fp_block_high_reward)
mean(data_succ$fp_block_low_reward)
t.test(data$tp_block_high_reward, data$tp_block_low_reward, paired = T)
t.test(data_succ$tp_block_high_reward, data_succ$tp_block_low_reward, paired = T)
t.test(data$dprime_block_high_reward, data$dprime_block_low_reward, paired = T)
t.test(data_succ$dprime_block_high_reward, data_succ$dprime_block_low_reward, paired = T)
sum(data$lie_proportion_block_high_reward > data$lie_proportion_block_low_reward)
model2 <- "subject_lied ~ reward_block + random_pick_red + prop_blue + condition + (1 + reward_block + random_pick_red + prop_blue + condition | uuid)"
fit2s <- glmer(model2, data_long_succ, family = binomial, control=glmerControl(optimizer="bobyqa"))
summary(fit2s)
lmer_std_ests(fit2s)
model3 <- "suspicion_rating ~ normed_signed_e_v + normed_unsigned_e_v + subject_lied + subject_lost + reward_block + condition +
(1 + normed_signed_e_v + normed_unsigned_e_v + subject_lied + subject_lost + reward_block + condition | uuid)"
fit3s <- lmer(model3, data_long_succ, REML = FALSE, control=lmerControl(optimizer="bobyqa"))
summary(fit3s)
lmer_std_ests(fit3s)
tmp <- data_long[,c("uuid", "suspicion_rating", "subject_lied", "subject_lost", "normed_signed_e_v", "normed_unsigned_e_v", "random_pick_col")]
head(tmp)
dim(tmp)
write.csv(tmp, "exp3_trials_varsubset.csv")
t.test(data$lie_proportion_block_high_reward, data$lie_proportion_block_low_reward)
t.test(data$lie_proportion_block_high_reward, data$lie_proportion_block_low_reward, paired = T)
tmp <- data_long[,c("uuid", "suspicion_rating", "subject_lied", "subject_lost", "normed_signed_e_v", "normed_unsigned_e_v", "random_pick_col", "reward_block")]
write.csv(tmp, "exp3_trials_varsubset.csv")
head(tmp)
t.test(data$lie_proportion_redpicks_block_high_reward, data$lie_proportion_redpicks_block_low_reward, paired = T)
# check if people lied more on high reward block
t.test(data$lie_proportion_block_high_reward, data$lie_proportion_block_low_reward, paired = T)
head(data_long)
## load datasets
tmp <- read.csv("C:/Users/Sarah Zheng/dev/simpy-suspicion-model/exp3_data_trials.csv")
str(tmp)
str(data_long)
data.frame(fit3)
data.frame(summary(fit3))
summary(fit3)
summary(fit3)$coefficients
sr_plotdata <- data.frame(summary(fit3)$coefficients)
sr_plotdata$p <- sr_plotdata$`Pr(>|t|)`
sr_plotdata
sr_plotdata$p <- sr_plotdata$`Pr(>|t|)`
sr_plotdata
sr_plotdata$p <- sr_plotdata$Pr...t..
sr_plotdata
sr_plotdata$p <- sr_plotdata$'Pr...t..'
sr_plotdata
str(sr_plotdata)
sr_plotdata$params <- c("normed_signed_e_v", "normed_unsigned_e_v", "subject_lied", "subject_lost", "reward_block", "condition")
sr_plotdata$params <- c("intercept", "normed_signed_e_v", "normed_unsigned_e_v", "subject_lied", "subject_lost", "reward_block", "condition")
str(sr_plotdata)
sr_plotdata
typeof(sr_plotdata$p)
ggplot(sr_plotdata, aes(x=factor(params, level=c("normed_signed_e_v", "normed_unsigned_e_v", "subject_lied", "subject_lost", "reward_block", "condition", "")),
y=estim)) +
geom_bar(stat="identity")
ggplot(sr_plotdata, aes(x=factor(params, level=c("normed_signed_e_v", "normed_unsigned_e_v", "subject_lied", "subject_lost", "reward_block", "condition", "")),
y=Estimate))
sr_plotdata
sr_plotdata[1, ] <- NULL
sr_plotdata
sr_plotdata[1]
sr_plotdata[1,]
rm(sr_plotdata[1,])
sr_plotdata[1,] <- NULL
sr_plotdata
setDT(sr_plotdata)
sr_plotdata[1,] <- NULL
sr_plotdata
sr_plotdata <- sr_plotdata[-1, ]
sr_plotdata
ggplot(sr_plotdata, aes(x=factor(params, level=c("normed_signed_e_v", "normed_unsigned_e_v", "subject_lied", "subject_lost", "reward_block", "condition", "")),
y=Estimate))
sr_plotdata$Estimate
typeof(sr_plotdata$Estimate)
ggplot(sr_plotdata, aes(x=factor(params, levels=c("normed_signed_e_v", "normed_unsigned_e_v", "subject_lied", "subject_lost", "reward_block", "condition", "")),
y=Estimate))
str(sr_plotdata)
sr_plotdata$params <- factor(sr_plotdata$params)
ggplot(sr_plotdata, aes(x=params, y=Estimate)) +
geom_bar(stat="identity")
model3_std_est <- lmer_std_ests(fit3)
model3_std_est
model3 <- "suspicion_rating ~ normed_signed_e_v + normed_unsigned_e_v + subject_lied + subject_lost + reward_block + condition +
(1 + normed_signed_e_v + normed_unsigned_e_v + subject_lied + subject_lost + reward_block + condition | uuid)"
fit3 <- lmer(model3, data_long, REML = FALSE, control=lmerControl(optimizer="bobyqa"))
summary(fit3)
model3_std_est <- lmer_std_ests(fit3)
# plot suspicion predictor estimates
sr_plotdata <- data.frame(model3_std_est)
sr_plotdata
t(sr_plotdata)
sr_plotdata <- t(sr_plotdata)
data.frame(summary(fit3))$P...t...
data.frame(summary(fit3)$coefficients)$P...t...
data.frame(summary(fit3)$coefficients)
data.frame(summary(fit3)$coefficients)$'Pr...t..'
sr_plotdata$p <- data.frame(summary(fit3)$coefficients)$'Pr...t..'
sr_plotdata
data.frame(summary(fit3)$coefficients)$'Pr...t..'
c(data.frame(summary(fit3)$coefficients)$'Pr...t..')
sr_plotdata$p <- c(data.frame(summary(fit3)$coefficients)$'Pr...t..')
# plot suspicion predictor estimates
sr_plotdata <- data.frame(model3_std_est)
sr_plotdata <- t(sr_plotdata)
sr_plotdata$p <- c(data.frame(summary(fit3)$coefficients)$'Pr...t..')
sr_plotdata
# plot suspicion predictor estimates
sr_plotdata <- data.frame(model3_std_est)
sr_plotdata
sr_plotdata <- t(sr_plotdata)
sr_plotdata <- data.frame(t(sr_plotdata))
sr_plotdata
# plot suspicion predictor estimates
sr_plotdata <- data.frame(model3_std_est)
sr_plotdata <- data.frame(t(sr_plotdata))
sr_plotdata
sr_plotdata$p <- c(data.frame(summary(fit3)$coefficients)$'Pr...t..')
sr_plotdata
colnames(sr_plotdata) <- c("params", "p")
sr_plotdata <- sr_plotdata[-1, ]
sr_plotdata
# plot suspicion predictor estimates
sr_plotdata <- data.frame(model3_std_est)
sr_plotdata <- data.frame(t(sr_plotdata))
data.frame(summary(fit3)$coefficients)
sr_plotdata
sr_plotdata$p <- c(data.frame(summary(fit3)$coefficients)$'Pr...t..')
sr_plotdata$params <- c("normed_signed_e_v", "normed_unsigned_e_v", "subject_lied", "subject_lost", "reward_block", "condition")
setDT(sr_plotdata)
sr_plotdata <- sr_plotdata[-1, ]
sr_plotdata$params <- c("normed_signed_e_v", "normed_unsigned_e_v", "subject_lied", "subject_lost", "reward_block", "condition")
sr_plotdata
colnames(()sr_plotdata$t.sr_plotdata.) <- "Estimate"
colnames(sr_plotdata$t.sr_plotdata.) <- "Estimate"
colnames(sr_plotdata$'t.sr_plotdata.') <- "Estimate"
sr_plotdata
colnames(sr_plotdata) <- c("estimate", "p", "params")
sr_plotdata$params <- factor(sr_plotdata$params)
str(sr_plotdata)
ggplot(sr_plotdata, aes(x=params, y=estimate)) +
geom_bar(stat="identity") +
theme(legend.position="none", axis.title.x=element_blank()) +
geom_point(data = sr_plotdata[sr_plotdata$p < .05, ], aes(x=params, y=0.3), shape = "*", size=10, color="black") +
ylab("Standardised betas \n predicting suspicion") +
xlab("") +
scale_x_discrete(labels=c("Signed \n expectation violation",
"Unsigned \n expectation violation",
"Lynig oneself",
"Losing",
"High stakes \n block",
"Block order")) +
theme_bw() + theme_bw() + theme(text = element_text(size=20), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(sr_plotdata, aes(x=params, y=estimate)) +
geom_bar(stat="identity") +
theme(legend.position="none", axis.title.x=element_blank()) +
geom_point(data = sr_plotdata[sr_plotdata$p < .05, ], aes(x=params, y=0.35), shape = "*", size=10, color="black") +
ylab("Standardised betas \n predicting suspicion") +
xlab("") +
scale_x_discrete(labels=c("Signed \n expectation violation",
"Unsigned \n expectation violation",
"Lynig oneself",
"Losing",
"High stakes \n block",
"Block order")) +
theme_bw() + theme_bw() + theme(text = element_text(size=20), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(sr_plotdata, aes(x=params, y=estimate)) +
geom_bar(stat="identity") +
theme(legend.position="none", axis.title.x=element_blank()) +
geom_point(data = sr_plotdata[sr_plotdata$p < .05, ], aes(x=params, y=0.35), shape = "*", size=10, color="black") +
ylab("Standardised betas \n predicting suspicion") +
xlab("") +
scale_x_discrete(labels=c("Signed \n expectation violation",
"Unsigned expectation \n violation",
"Lynig oneself",
"Losing",
"High stakes \n block",
"Block order")) +
theme_bw() + theme_bw() + theme(text = element_text(size=20), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(sr_plotdata, aes(x=params, y=estimate)) +
geom_bar(stat="identity") +
theme(legend.position="none", axis.title.x=element_blank()) +
geom_point(data = sr_plotdata[sr_plotdata$p < .05, ], aes(x=params, y=0.35), shape = "*", size=10, color="black") +
ylab("Standardised betas \n predicting suspicion") +
xlab("") +
scale_x_discrete(labels=c("Signed \n expectation \n violation",
"Unsigned \n expectation \n violation",
"Lynig oneself",
"Losing",
"High stakes \n block",
"Block order")) +
theme_bw() + theme_bw() + theme(text = element_text(size=20), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(sr_plotdata, aes(x=factor(params, levels = c("normed_signed_e_v", "normed_unsigned_e_v", "subject_lied", "subject_lost", "reward_block", "condition")), y=estimate)) +
geom_bar(stat="identity") +
theme(legend.position="none", axis.title.x=element_blank()) +
geom_point(data = sr_plotdata[sr_plotdata$p < .05, ], aes(x=params, y=0.35), shape = "*", size=10, color="black") +
ylab("Standardised betas \n predicting suspicion") +
xlab("") +
scale_x_discrete(labels=c("Signed \n expectation \n violation",
"Unsigned \n expectation \n violation",
"Lynig oneself",
"Losing",
"High stakes \n block",
"Block order")) +
theme_bw() + theme_bw() + theme(text = element_text(size=20), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
# check if people lied more on high reward block
t.test(data$mean_suspicion_rating_block_high_reward, data$mean_suspicion_rating_block_low_reward, paired = T)
str(Data)
str(data)
ggplot(master_data) +
geom_segment(aes(x=1, xend=2, y=mean_suspicion_rating_block_high_reward, yend=mean_suspicion_rating_block_low_reward, col=uuid), size=.75, show.legend=F) + xlim(.5, 2.5)
ggplot(data, aes(y=lie_proportion_block_high_reward)) +
geom_bar(stat="identity")
ggplot(data, aes(x=1, y=lie_proportion_block_high_reward)) +
geom_bar(stat="identity")
ggplot(data, aes(x=1, y=lie_proportion_block_high_reward)) +
geom_boxplot(stat="identity")
melt(data, measure.vars = c("lie_proportion_block_high_reward", "lie_proportion_block_low_reward"))
tmp <- melt(data, measure.vars = c("lie_proportion_block_high_reward", "lie_proportion_block_low_reward"))
ggplot(tmp, aes(x=variable, y=value)) +
geom_boxplot(stat="identity")
ggplot(tmp, aes(x=variable, y=value)) +
geom_boxplot()
ggplot(tmp, aes(x=variable, y=value)) +
geom_violin()
mean(data$lie_proportion_block_high_reward)
mean(data$lie_proportion_block_low_reward)
ggplot(sr_plotdata, aes(x=factor(params, levels = c("normed_signed_e_v", "normed_unsigned_e_v", "subject_lied", "subject_lost", "reward_block", "condition")), y=estimate)) +
geom_bar(stat="identity") +
theme(legend.position="none", axis.title.x=element_blank()) +
geom_point(data = sr_plotdata[sr_plotdata$p < .05, ], aes(x=params, y=0.35), shape = "*", size=10, color="black") +
ylab("Standardised betas \npredicting suspicion") +
xlab("") +
scale_x_discrete(labels=c("Signed \n expectation \n violation",
"Unsigned \n expectation \n violation",
"Lynig oneself",
"Losing",
"High stakes \n block",
"Block order")) +
theme_bw() + theme_bw() + theme(text = element_text(size=20), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
master_data$diff_avg_suspicion <- master_data$mean_suspicion_rating_block_high_reward - master_data$mean_suspicion_rating_block_low_reward
master_data$diff_lie_prop_redpicks <- master_data$lie_proportion_redpicks_block_high_reward - master_data$lie_proportion_redpicks_block_low_reward
master_data$diff_lie_prop <- master_data$lie_proportion_block_high_reward - master_data$lie_proportion_block_low_reward
ggplot(master_data, aes(x=diff_lie_prop, y=diff_avg_suspicion)) +
geom_point(aes(col=uuid), show.legend=F) +
geom_smooth(method="lm") +
xlab("Difference in tendency to lie high vs. low reward block") +
ylab("Difference in mean suspicion high vs. low reward block")
ggplot(master_data, aes(x=diff_lie_prop, y=diff_avg_suspicion)) +
geom_point() +  # aes(col=uuid), show.legend=F
geom_smooth(method="lm") +
xlab("Difference in tendency to lie high vs. low reward block") +
ylab("Difference in mean suspicion high vs. low reward block")
ggplot(master_data, aes(x=diff_lie_prop, y=diff_avg_suspicion)) +
geom_point() +  # aes(col=uuid), show.legend=F
geom_smooth(method="lm", color="darkgoldenrod") +
xlab("Difference in tendency to lie high vs. low reward block") +
ylab("Difference in mean suspicion high vs. low reward block") +
theme_bw() + theme(text = element_text(size=20), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(master_data, aes(x=diff_lie_prop, y=diff_avg_suspicion)) +
geom_point() +  # aes(col=uuid), show.legend=F
geom_smooth(method="lm", color="darkgoldenrod") +
xlab("\delta in tendency to lie high vs. low reward block") +
ylab("Difference in mean suspicion high vs. low reward block") +
theme_bw() + theme(text = element_text(size=20), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(master_data, aes(x=diff_lie_prop, y=diff_avg_suspicion)) +
geom_point() +  # aes(col=uuid), show.legend=F
geom_smooth(method="lm", color="darkgoldenrod") +
xlab("expression(delta) in tendency to lie high vs. low reward block") +
ylab("Difference in mean suspicion high vs. low reward block") +
theme_bw() + theme(text = element_text(size=20), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(master_data, aes(x=diff_lie_prop, y=diff_avg_suspicion)) +
geom_point() +  # aes(col=uuid), show.legend=F
geom_smooth(method="lm", color="darkgoldenrod") +
xlab("\U0394 in tendency to lie high vs. low reward block") +
ylab("Difference in mean suspicion high vs. low reward block") +
theme_bw() + theme(text = element_text(size=20), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(master_data, aes(x=diff_lie_prop, y=diff_avg_suspicion)) +
geom_point() +  # aes(col=uuid), show.legend=F
geom_smooth(method="lm", color="darkgoldenrod") +
xlab("\U0394 Tendency to lie \nhigh vs. low reward block") +
ylab("\U0394 Mean suspicion \nhigh vs. low reward block") +
theme_bw() + theme(text = element_text(size=20), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(master_data, aes(x=diff_lie_prop, y=diff_avg_suspicion)) +
geom_point() +  # aes(col=uuid), show.legend=F
geom_smooth(method="lm", color="darkgoldenrod") +
xlab("\U0394 Tendency to lie \nHigh vs. low reward block") +
ylab("\U0394 Mean suspicion \nHigh vs. low reward block") +
theme_bw() + theme(text = element_text(size=20), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(master_data, aes(x=diff_lie_prop, y=diff_avg_suspicion)) +
geom_point() +  # aes(col=uuid), show.legend=F
geom_smooth(method="lm", color="darkgoldenrod") +
xlab("\U0394 Tendency to lie \nHigh vs. low reward block") +
ylab("\U0394 Mean suspicion rating \nHigh vs. low reward block") +
theme_bw() + theme(text = element_text(size=20), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(master_data, aes(x=diff_lie_prop, y=diff_avg_suspicion)) +
geom_point() +  # aes(col=uuid), show.legend=F
geom_smooth(method="lm", color="darkgoldenrod") +
xlab("\U0394 Tendency to lie \nHigh - low reward block") +
ylab("\U0394 Mean suspicion rating \nHigh - low reward block") +
theme_bw() + theme(text = element_text(size=20), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
data$diff_avg_suspicion <- data$mean_suspicion_rating_block_high_reward - data$mean_suspicion_rating_block_low_reward
data$diff_lie_prop <- data$lie_proportion_block_high_reward - data$lie_proportion_block_low_reward
ggplot(data, aes(x=diff_lie_prop, y=diff_avg_suspicion)) +
geom_point() +  # aes(col=uuid), show.legend=F
geom_smooth(method="lm", color="darkgoldenrod") +
xlab("\U0394 Tendency to lie \nHigh - low reward block") +
ylab("\U0394 Mean suspicion rating \nHigh - low reward block") +
theme_bw() + theme(text = element_text(size=20), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(data, aes(x=diff_lie_prop, y=diff_avg_suspicion)) +
geom_point() +  # aes(col=uuid), show.legend=F
geom_smooth(method="lm", color="darkgoldenrod") +
xlab("\U0394 Tendency to lie \n(high - low reward block)") +
ylab("\U0394 Mean suspicion rating \nHigh - low reward block") +
theme_bw() + theme(text = element_text(size=20), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(data, aes(x=diff_lie_prop, y=diff_avg_suspicion)) +
geom_point() +  # aes(col=uuid), show.legend=F
geom_smooth(method="lm", color="darkgoldenrod") +
xlab("\U0394 Tendency to lie \n(high - low reward block)") +
ylab("\U0394 Mean suspicion rating \n(high - low reward block)") +
theme_bw() + theme(text = element_text(size=20), panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggplot(tmp, aes(x=variable, y=value)) +
geom_violin()
ggplot(tmp, aes(x=variable, y=value)) +
geom_bracket()
tmp <- melt(data, measure.vars = c("lie_proportion_block_high_reward", "lie_proportion_block_low_reward"))
ggplot(tmp, aes(x=variable, y=value)) +
geom_bracket()
ggplot(tmp, aes(x=variable, y=value)) +
geom_dotplot()
ggplot(tmp, aes(x=variable, y=value)) +
geom_boxplot()
ggplot(tmp, aes(x=variable, y=value)) +
geom_violin()
ggplot(tmp, aes(x=variable, y=value)) +
geom_point()
install.packages("beeswarm")
library(beeswarm)
tmp <- melt(data, measure.vars = c("lie_proportion_block_high_reward", "lie_proportion_block_low_reward"))
str(tmp)
beeswarm(value ~ variable, data=tmp, method="swarm")
bxplot(tmp, add = TRUE, probs = 0.5)
boxplot(value ~ variable, data = tmp, add = T, names = c("",""), col="#0000ff22")
boxplot(value ~ variable, data = tmp, add = T, names = c("",""), col="goldenrod")
boxplot(value ~ variable, data = tmp, add = T, names = c("",""), col="#0000ff22")
beeswarm(value ~ variable, data=tmp, method="swarm")
boxplot(value ~ variable, data = tmp, add = T, names = c("",""), col="#0000ff22")
beeswarm(value ~ variable, data=tmp, method="swarm")
boxplot(value ~ variable, data = tmp, add = T, names = c("",""), col="goldenrod")
boxplot(value ~ variable, data = tmp, add = T, names = c("",""), col="#0092ff95")
beeswarm(value ~ variable, data=tmp, method="swarm")
boxplot(value ~ variable, data = tmp, add = T, names = c("",""), col="#e9c32b")
beeswarm(value ~ variable, data=tmp, method="swarm")
boxplot(value ~ variable, data = tmp, add = T, names = c("",""), col="#00c9c32b")
beeswarm(value ~ variable, data=tmp, method="swarm")
boxplot(value ~ variable, data = tmp, add = T, names = c("",""), col="#00e9c32b")
beeswarm(value ~ variable, data=tmp, method="swarm")
boxplot(value ~ variable, data = tmp, add = T, names = c("",""), col="#00e9c39b")
beeswarm(value ~ variable, data=tmp, method="swarm")
boxplot(value ~ variable, data = tmp, add = T, names = c("",""), col="#00e9c51b")
beeswarm(value ~ variable, data=tmp, method="swarm", xlab = '', ylab = 'Tendency to lie',
boxplot(value ~ variable, data = tmp, add = T, names = c("",""), col="#00e9c51b")
beeswarm(value ~ variable, data=tmp, method="swarm", xlab = '', ylab = 'Tendency to lie', labels = c('High stakes block', 'Low stakes block'))
boxplot(value ~ variable, data = tmp, add = T, names = c("",""), col="#00e9c51b")
beeswarm(value ~ variable, data=tmp, method="swarm", xlab = '', ylab = 'Tendency to lie', labels = c('High stakes block', 'Low stakes block'))
boxplot(value ~ variable, data = tmp, add = T, col="#00e9c51b")
beeswarm(value ~ variable, data=tmp, method="swarm", xlab = '', ylab = 'Tendency to lie', labels = c('High stakes block', 'Low stakes block'))
boxplot(value ~ variable, data = tmp, add = T, names = c("",""), col="#00e9c51b")
?dfm_trim
??dfm_trim()
?merge
